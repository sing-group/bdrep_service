
package org.datasetservice.domain;

import java.util.Date;

public class TaskCreateUPreprocessing extends Task
{
    /**
     * A description for the preprocessing task
     */
    private String description;

    /**
     * The pipeline used to preprocess the dataset
     */
    private byte[] pipeline;

    /**
     * The name of the csv to identify in the filesystem
     */
    private String csv;

    /**
     * The date of creation of the preprocessing task
     */
    private Date date;


    private Dataset preprocessDataset;

    /**
     * The default constructor
     */
    public TaskCreateUPreprocessing()
    {
        super();
    }

    /**
     * Creates an instance of TaskCreateUPreprocessing 
     * @param id the is of the task
     * @param dataset the dataset associated to the task
     * @param state the state of the task: waiting, failed, success, executing
     * @param message the message of the task, only if the task was failed
     * @param description the description of the task
     * @param pipeline the pipeline used to preprocess the dataset
     * @param csv the name of the csv generated
     * @param date the date of upload of the task
     */
    public TaskCreateUPreprocessing(Long id,Dataset dataset, String state, String message, String description, byte[] pipeline, String csv, Date date, Dataset preprocessDataset)
    {
        super(id,dataset, state, message);
        this.description = description;
        this.pipeline = pipeline;
        this.csv = csv;
        this.date = date;
        this.preprocessDataset = preprocessDataset;
    }

    /**
     * Return the description of the task
     * @return the description of the task
     */
    public String getDescription()
    {
        return this.description;
    }

    /**
     * Stablish the description of the task
     * @param description the description of the task
     */
    public void setDescription(String description)
    {
        this.description = description;
    }

    /**
     * Return the pipeline of the task
     * @return the pipeline of the task
     */
    public byte[] getPipeline()
    {
        return this.pipeline;
    }

    /**
     * Stablish the pipeline of the task
     * @param pipeline the pipeline of the task
     */
    public void setPipeline(byte[] pipeline)
    {
        this.pipeline = pipeline;
    }

    /**
     * Return the name of the csv generated by the task
     * @return the name of the csv generated by the task
     */
    public String getCsv()
    {
        return this.csv;
    }

    /**
     * Stablish the name of the csv generated by the task
     * @param csv the name of the csv generated by the task
     */
    public void setCsv(String csv)
    {
        this.csv = csv;
    }

    /**
     * Return the date of the task
     * @return the date of the task
     */
    public Date getDate()
    {
        return date;
    }

    /**
     * Stablish the date of the task
     * @param date the date of the task
     */
    public void setDate(Date date)
    {
        this.date = date;
    }

    /**
     * Return the preprocessed dataset
     * @return the preprocessed dataset
     */
    public Dataset getPreprocessDataset()
    {
        return this.preprocessDataset;
    }

    /**
     * Stablish the preprocessed dataset
     * @param preprocessDataset the preprocessed dataset
     */
    public void setPreprocessDataset(Dataset preprocessDataset)
    {
        this.preprocessDataset = preprocessDataset;
    }

    
}